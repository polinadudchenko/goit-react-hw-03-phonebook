{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","App.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","utils/helpers-local-storage.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","setState","currentTarget","target","value","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","contact_form","contact_form__label","type","contact_form__input","onChange","pattern","title","required","contact_form__button","Component","Contact","deleteBtn","contact_line","contact_btn","onClick","ContactList","contacts","onDeleteContact","contact_list","contact_list__head","contact_list__head_line","contact_list__head_column","contact_list__body","map","id","contact_list__body_line","Filter","onHandleFilter","filter_form__label","filter_form__input","Section","children","section","section_title","defaultPropTypes","App","filter","onHandlerSubmit","data","find","contact","toLowerCase","alert","prevState","uuidv1","handleFilter","filterContacts","includes","deleteContact","contactId","handleAlert","parsedContacts","key","localStorage","getItem","JSON","parse","error","Error","getDataFromLocalStorage","prevProps","setItem","stringify","writeDataToLocalStorage","App_title","App_content","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09968ca4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__3eEdJ\",\"contact_list__head\":\"ContactList_contact_list__head__3cZhH\",\"contact_list__body\":\"ContactList_contact_list__body__1FXbm\",\"contact_list__body_line\":\"ContactList_contact_list__body_line__IIQAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__SYcnq\",\"contact_form__label\":\"ContactForm_contact_form__label__2lqH2\",\"contact_form__input\":\"ContactForm_contact_form__input__3ig-0\",\"contact_form__button\":\"ContactForm_contact_form__button__188Aq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_line\":\"Contact_contact_line__2lyGO\",\"contact_btn\":\"Contact_contact_btn__2ekod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2f4Km\",\"App_title\":\"App_App_title__2f1vX\",\"App_content\":\"App_App_content__2Fiv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form__label\":\"Filter_filter_form__label__1u4Yj\",\"filter_form__input\":\"Filter_filter_form__input__1aPIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1o3Q5\",\"section_title\":\"Section_section_title__2Y1_o\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from './ContactForm.module.css'\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: '',\r\n};\r\n\r\nclass ContactForm extends Component{\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    }\r\n    state = {...INITIAL_STATE}\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({ [e.currentTarget.name]: e.target.value })\r\n    }\r\n  \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit({ ...this.state });\r\n        this.reset();\r\n    }\r\n    \r\n    reset = () => {\r\n        this.setState({...INITIAL_STATE})\r\n    }\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return <form className={s.contact_form} onSubmit={this.handleSubmit}>\r\n            <label className={s.contact_form__label}> Name\r\n                <input\r\n                    type=\"text\"                \r\n                    className={s.contact_form__input}\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={s.contact_form__label}> Telephone number\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    className={s.contact_form__input}\r\n                    onChange={this.handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.contact_form__button} >\r\n            Add to contacts\r\n            </button>\r\n        </form> \r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default  ContactForm","import PropTypes from 'prop-types'\r\nimport s from './Contact.module.css'\r\n\r\nexport default function Contact({deleteBtn, name, number}) {\r\n        return <>\r\n            <td className={s.contact_line}>{ name }</td>\r\n            <td className={s.contact_line}>{number}</td>\r\n            <td className={s.contact_line}><button className={s.contact_btn}onClick={ deleteBtn }>Delete</button></td>\r\n            </>                    \r\n}\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n    \r\n    return <table className={s.contact_list} >\r\n            <thead className={s.contact_list__head}>\r\n                <tr className={s.contact_list__head_line}>\r\n                   <th className={s.contact_list__head_column}>Name</th>\r\n                   <th className={s.contact_list__head_column}>Number</th>\r\n                   <th className={s.contact_list__head_column}>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className={s.contact_list__body}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <tr key={id} className={s.contact_list__body_line}>\r\n                    <Contact name={name} number={number} deleteBtn={() => onDeleteContact(id) }/>\r\n                </tr>)\r\n            )}\r\n            </tbody> \r\n        </table> \r\n}\r\n\r\nContactList.propTypes = {\r\n        contacts: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })),\r\n        onDeleteContact: PropTypes.func.isRequired,\r\n    }","import PropTypes from 'prop-types'\r\nimport s from './Filter.module.css'\r\n\r\nexport default function Filter({ onHandleFilter }) {\r\n    \r\n    return <label className={s.filter_form__label}> Find a contact\r\n                <input\r\n                    type=\"text\"                \r\n                    className={s.filter_form__input}\r\n                    name=\"filter\"\r\n                    onChange={onHandleFilter}\r\n                />\r\n            </label>\r\n}\r\n\r\nFilter.propTypes = {\r\n       onHandleFilter: PropTypes.func.isRequired,\r\n    }","import PropTypes from 'prop-types'\r\nimport s from './Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n    return <section className={s.section}>\r\n        <h2 className={s.section_title}> {title}</h2>\r\n        {children}\r\n        </section>\r\n}\r\n\r\nSection.defaultPropTypes = {\r\n    title: '',\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}","import React, { Component } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport s from './App.module.css';\nimport { getDataFromLocalStorage } from './utils/helpers-local-storage'\nimport { writeDataToLocalStorage } from './utils/helpers-local-storage'\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter'\nimport Section from './components/Section'\n\nclass App extends Component {\n  \n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const parsedContacts = getDataFromLocalStorage('contacts');\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      writeDataToLocalStorage('contacts', this.state.contacts);\n    }\n    \n  }\n\n  onHandlerSubmit = data => {\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\n      return alert('This contact already in the addressbook')\n    }\n    this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { id: uuidv1(), name: data.name, number: data.number }]\n        }))\n  }\n\n  handleFilter = (e) => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  filterContacts = () => {\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))\n    return filteredContacts;\n  }\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n\n  handleAlert = () => {\n    alert('No matches is found')\n  }\n\n  render() {\n    return (\n      <div className={s.App}>\n        <h1 className={s.App_title}>Phonebook</h1>\n        <div className={s.App_content}>\n        <Section title=\"Create a new Contact\">\n        <ContactForm onSubmit={this.onHandlerSubmit} />\n        </Section>\n       \n        <Section title=\"Your contacts\">\n            <Filter onHandleFilter={this.handleFilter} />\n            {!(this.filterContacts().length === 0)\n            && <ContactList contacts={this.state.filter ? this.filterContacts() : this.state.contacts} onDeleteContact={ this.deleteContact}/>\n            }\n          </Section>\n        </div>\n    </div>\n  )\n  }\n  \n}\n\nexport default App;\n","\r\nexport const getDataFromLocalStorage = (key) => {\r\n    \r\n    try {\r\n        const data = localStorage.getItem(key);\r\n        return data ? JSON.parse(data) : null;\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const writeDataToLocalStorage = (key, value) => {\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}